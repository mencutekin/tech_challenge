- hosts: postgres_hosts
  remote_user: root
  gather_facts: True
  become: true
  vars:
    postgresql_version: "14"
	old_postgresql_version : "13"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_data_dir: "/data01/new_data"
    old_postgresql_bin_path: "/usr/lib/postgresql/{{ old_postgresql_version }}/bin"
    old_postgresql_data_dir: "/data01/old_data"
    ansible_ssh_pipelining: true

  tasks:

  - name: install postgres packages
    ansible.builtin.apt:
      name:
        - postgresql
        - postgresql-contrib
        - python3-psycopg2
      state: present
      update_cache: true
    become: true

  - name: create postgres directories
    file:
      path: "{{ item }}"
      state: directory
      owner: postgres
      group: postgres
      mode: 0700
      recurse: yes
    loop:
      - /data01/new_data

  - name: Initialize PostgreSQL
    shell: " {{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
    become: true
    become_user: postgres
    become_method: dzdo


  - name: Stop old PostgreSQL Instance
    ansible.builtin.shell: "{{ old_postgresql_bin_path }}/pg_ctl stop -D {{ old_postgresql_data_dir }}"
    become: true
    become_user: postgres
    become_method: dzdo

  - name: Check upgrade
    ansible.builtin.shell: "{{ postgresql_bin_path }}/pg_upgrade --old-bindir {{ old_postgresql_bin_path }} --new-bindir {{ postgresql_bin_path }} --old-datadir {{ old_postgresql_data_dir }} --new-datadir {{ postgresql_data_dir }} --link --check  >> checklog.txt"
    become: true
    become_user: postgres
    become_method: dzdo

  - name: Perform Upgrade
    ansible.builtin.shell: "{{ postgresql_bin_path }}/pg_upgrade --old-bindir {{ old_postgresql_bin_path }} --new-bindir {{ postgresql_bin_path }} --old-datadir {{ old_postgresql_data_dir }} --new-datadir {{ postgresql_data_dir }} --link >> upgradelog.txt"
    become: true
    become_user: postgres
    become_method: dzdo
    args:
     chdir: tmp/
     creates: upgradelog.txt

  - name: Copy config file
    ansible.builtin.shell: " mv /data01/new_data/postgresql.conf /data01/new_data/postgresql.conf.old ; cp /data01/old_data/postgresql.conf /data01/new_data/ "
    when: inventory_hostname == 'turkoman01'
    become: true
    become_user: postgres
    become_method: dzdo

  - name: Copy hba config file
    ansible.builtin.shell: " mv /data01/new_data/pg_hba.conf /data01/new_data/pg_hba.conf.old ; cp /data01/old_data/pg_hba.conf /data01/new_data/ "
    when: inventory_hostname == 'turkoman01'
    become: true
    become_user: postgres
    become_method: dzdo

  - name: Start new PostgreSQL Instance
    ansible.builtin.shell: "{{ postgresql_bin_path }}/pg_ctl start -D {{ postgresql_data_dir }}"
    become: true
    become_user: postgres
    become_method: dzdo
	
  - name: Confirm version and accepting a connection
	postgresql_query:
    db: pex
    query: SELECT version()
